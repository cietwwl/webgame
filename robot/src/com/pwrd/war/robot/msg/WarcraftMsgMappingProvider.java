package com.pwrd.war.robot.msg;

import java.util.HashMap;
import java.util.Map;

import com.pwrd.war.core.msg.MessageType;
import com.pwrd.war.common.MessageMappingProvider;

import com.pwrd.war.gameserver.warcraft.msg.CGReqWarcraftInfo;
import com.pwrd.war.gameserver.warcraft.msg.GCReqWarcraftInfo;
import com.pwrd.war.gameserver.warcraft.msg.CGReqWarcraftTempInfo;
import com.pwrd.war.gameserver.warcraft.msg.GCWarcraftTempInfo;
import com.pwrd.war.gameserver.warcraft.msg.CGReqAllWarcraftBagInfo;
import com.pwrd.war.gameserver.warcraft.msg.GCWarcraftBag;
import com.pwrd.war.gameserver.warcraft.msg.GCWarcraftUpdate;
import com.pwrd.war.gameserver.warcraft.msg.GCRemoveWarcraft;
import com.pwrd.war.gameserver.warcraft.msg.GCResetWarcraftCapacity;
import com.pwrd.war.gameserver.warcraft.msg.CGMoveWarcraft;
import com.pwrd.war.gameserver.warcraft.msg.CGDropWarcraft;
import com.pwrd.war.gameserver.warcraft.msg.CGSellWarcraft;
import com.pwrd.war.gameserver.warcraft.msg.CGGraspWarcraft;
import com.pwrd.war.gameserver.warcraft.msg.CGGetWarcraft;
import com.pwrd.war.gameserver.warcraft.msg.CGGetAllWarcraft;
import com.pwrd.war.gameserver.warcraft.msg.CGGetPrizeWarcraft;
import com.pwrd.war.gameserver.warcraft.msg.CGComposeAllWarcraft;
import com.pwrd.war.gameserver.warcraft.msg.CGSellAllWarcraft;
import com.pwrd.war.gameserver.warcraft.msg.GCSellWarcraftResult;
import com.pwrd.war.gameserver.warcraft.msg.GCPickWarcraftResult;
import com.pwrd.war.gameserver.warcraft.msg.GCGraspWarcraftResult;

/**
 *  Generated by MessageCodeGenerator,don't modify please.
 *  Need to register in<code>GameMessageRecognizer#init</code>
 */
public class WarcraftMsgMappingProvider implements MessageMappingProvider {

	@Override
	public Map<Short, Class<?>> getMessageMapping() {
		Map<Short, Class<?>> map = new HashMap<Short, Class<?>>();
		map.put(MessageType.CG_REQ_WARCRAFT_INFO, CGReqWarcraftInfo.class);
		map.put(MessageType.GC_REQ_WARCRAFT_INFO, GCReqWarcraftInfo.class);
		map.put(MessageType.CG_REQ_WARCRAFT_TEMP_INFO, CGReqWarcraftTempInfo.class);
		map.put(MessageType.GC_WARCRAFT_TEMP_INFO, GCWarcraftTempInfo.class);
		map.put(MessageType.CG_REQ_ALL_WARCRAFT_BAG_INFO, CGReqAllWarcraftBagInfo.class);
		map.put(MessageType.GC_WARCRAFT_BAG, GCWarcraftBag.class);
		map.put(MessageType.GC_WARCRAFT_UPDATE, GCWarcraftUpdate.class);
		map.put(MessageType.GC_REMOVE_WARCRAFT, GCRemoveWarcraft.class);
		map.put(MessageType.GC_RESET_WARCRAFT_CAPACITY, GCResetWarcraftCapacity.class);
		map.put(MessageType.CG_MOVE_WARCRAFT, CGMoveWarcraft.class);
		map.put(MessageType.CG_DROP_WARCRAFT, CGDropWarcraft.class);
		map.put(MessageType.CG_SELL_WARCRAFT, CGSellWarcraft.class);
		map.put(MessageType.CG_GRASP_WARCRAFT, CGGraspWarcraft.class);
		map.put(MessageType.CG_GET_WARCRAFT, CGGetWarcraft.class);
		map.put(MessageType.CG_GET_ALL_WARCRAFT, CGGetAllWarcraft.class);
		map.put(MessageType.CG_GET_PRIZE_WARCRAFT, CGGetPrizeWarcraft.class);
		map.put(MessageType.CG_COMPOSE_All_WARCRAFT, CGComposeAllWarcraft.class);
		map.put(MessageType.CG_SELL_All_WARCRAFT, CGSellAllWarcraft.class);
		map.put(MessageType.GC_SELL_WARCRAFT_RESULT, GCSellWarcraftResult.class);
		map.put(MessageType.GC_PICK_WARCRAFT_RESULT, GCPickWarcraftResult.class);
		map.put(MessageType.GC_GRASP_WARCRAFT_RESULT, GCGraspWarcraftResult.class);
		return map;
	}

}
