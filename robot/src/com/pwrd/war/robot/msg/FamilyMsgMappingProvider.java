package com.pwrd.war.robot.msg;

import java.util.HashMap;
import java.util.Map;

import com.pwrd.war.core.msg.MessageType;
import com.pwrd.war.common.MessageMappingProvider;

import com.pwrd.war.gameserver.family.msg.CGFamilyInfoList;
import com.pwrd.war.gameserver.family.msg.GCFamilyInfoList;
import com.pwrd.war.gameserver.family.msg.CGFamilyDetailInfo;
import com.pwrd.war.gameserver.family.msg.GCFamilyDetailInfo;
import com.pwrd.war.gameserver.family.msg.CGCreateFamily;
import com.pwrd.war.gameserver.family.msg.GCCreateFamily;
import com.pwrd.war.gameserver.family.msg.CGUpdateFamilyInfo;
import com.pwrd.war.gameserver.family.msg.CGTransferLeader;
import com.pwrd.war.gameserver.family.msg.CGApplyLeader;
import com.pwrd.war.gameserver.family.msg.CGExamineMember;
import com.pwrd.war.gameserver.family.msg.CGUpdateFamilyRole;
import com.pwrd.war.gameserver.family.msg.CGDeleteFamily;
import com.pwrd.war.gameserver.family.msg.CGLeaveFamily;
import com.pwrd.war.gameserver.family.msg.CGApplyFamily;
import com.pwrd.war.gameserver.family.msg.CGApplyMemberList;
import com.pwrd.war.gameserver.family.msg.GCApplyMemberList;
import com.pwrd.war.gameserver.family.msg.CGFamilyLog;
import com.pwrd.war.gameserver.family.msg.GCFamilyLog;
import com.pwrd.war.gameserver.family.msg.GCApplyFamilySuccess;

/**
 *  Generated by MessageCodeGenerator,don't modify please.
 *  Need to register in<code>GameMessageRecognizer#init</code>
 */
public class FamilyMsgMappingProvider implements MessageMappingProvider {

	@Override
	public Map<Short, Class<?>> getMessageMapping() {
		Map<Short, Class<?>> map = new HashMap<Short, Class<?>>();
		map.put(MessageType.CG_FAMILY_INFO_LIST, CGFamilyInfoList.class);
		map.put(MessageType.GC_FAMILY_INFO_LIST, GCFamilyInfoList.class);
		map.put(MessageType.CG_FAMILY_DETAIL_INFO, CGFamilyDetailInfo.class);
		map.put(MessageType.GC_FAMILY_DETAIL_INFO, GCFamilyDetailInfo.class);
		map.put(MessageType.CG_CREATE_FAMILY, CGCreateFamily.class);
		map.put(MessageType.GC_CREATE_FAMILY, GCCreateFamily.class);
		map.put(MessageType.CG_UPDATE_FAMILY_INFO, CGUpdateFamilyInfo.class);
		map.put(MessageType.CG_TRANSFER_LEADER, CGTransferLeader.class);
		map.put(MessageType.CG_APPLY_LEADER, CGApplyLeader.class);
		map.put(MessageType.CG_EXAMINE_MEMBER, CGExamineMember.class);
		map.put(MessageType.CG_UPDATE_FAMILY_ROLE, CGUpdateFamilyRole.class);
		map.put(MessageType.CG_DELETE_FAMILY, CGDeleteFamily.class);
		map.put(MessageType.CG_LEAVE_FAMILY, CGLeaveFamily.class);
		map.put(MessageType.CG_APPLY_FAMILY, CGApplyFamily.class);
		map.put(MessageType.CG_APPLY_MEMBER_LIST, CGApplyMemberList.class);
		map.put(MessageType.GC_APPLY_MEMBER_LIST, GCApplyMemberList.class);
		map.put(MessageType.CG_FAMILY_LOG, CGFamilyLog.class);
		map.put(MessageType.GC_FAMILY_LOG, GCFamilyLog.class);
		map.put(MessageType.GC_APPlY_FAMILY_SUCCESS, GCApplyFamilySuccess.class);
		return map;
	}

}
