package com.pwrd.war.robot.msg;

import java.util.HashMap;
import java.util.Map;

import com.pwrd.war.core.msg.MessageType;
import com.pwrd.war.common.MessageMappingProvider;

import com.pwrd.war.gameserver.rep.msg.CGRepInfoList;
import com.pwrd.war.gameserver.rep.msg.GCRepInfoList;
import com.pwrd.war.gameserver.rep.msg.CGCreateRep;
import com.pwrd.war.gameserver.rep.msg.GCCreateRep;
import com.pwrd.war.gameserver.rep.msg.CGEntryRep;
import com.pwrd.war.gameserver.rep.msg.GCEntryRep;
import com.pwrd.war.gameserver.rep.msg.GCCompleteRep;
import com.pwrd.war.gameserver.rep.msg.GCPrizeInfo;
import com.pwrd.war.gameserver.rep.msg.CGGetPrize;
import com.pwrd.war.gameserver.rep.msg.GCGetPrize;
import com.pwrd.war.gameserver.rep.msg.CGShiquItem;
import com.pwrd.war.gameserver.rep.msg.GCShiquItem;
import com.pwrd.war.gameserver.rep.msg.CGLeaveRep;
import com.pwrd.war.gameserver.rep.msg.GCLeaveRep;
import com.pwrd.war.gameserver.rep.msg.GCAliveMonster;
import com.pwrd.war.gameserver.rep.msg.CGAgainstRepInfo;
import com.pwrd.war.gameserver.rep.msg.GCAgainstRepInfo;
import com.pwrd.war.gameserver.rep.msg.CGAgainstRepStart;
import com.pwrd.war.gameserver.rep.msg.GCAgainstRepStart;
import com.pwrd.war.gameserver.rep.msg.GCAgainstRepResult;
import com.pwrd.war.gameserver.rep.msg.GCAgainstRepErr;
import com.pwrd.war.gameserver.rep.msg.CGAgainstRepEnd;
import com.pwrd.war.gameserver.rep.msg.GCAgainstRepEnd;
import com.pwrd.war.gameserver.rep.msg.CGAgainstRepAccGold;
import com.pwrd.war.gameserver.rep.msg.GCAgainstRepAccGold;
import com.pwrd.war.gameserver.rep.msg.CGAgainstRepAcc;

/**
 *  Generated by MessageCodeGenerator,don't modify please.
 *  Need to register in<code>GameMessageRecognizer#init</code>
 */
public class RepMsgMappingProvider implements MessageMappingProvider {

	@Override
	public Map<Short, Class<?>> getMessageMapping() {
		Map<Short, Class<?>> map = new HashMap<Short, Class<?>>();
		map.put(MessageType.CG_REP_INFO_LIST, CGRepInfoList.class);
		map.put(MessageType.GC_REP_INFO_LIST, GCRepInfoList.class);
		map.put(MessageType.CG_CREATE_REP, CGCreateRep.class);
		map.put(MessageType.GC_CREATE_REP, GCCreateRep.class);
		map.put(MessageType.CG_ENTRY_REP, CGEntryRep.class);
		map.put(MessageType.GC_ENTRY_REP, GCEntryRep.class);
		map.put(MessageType.GC_COMPLETE_REP, GCCompleteRep.class);
		map.put(MessageType.GC_PRIZE_INFO, GCPrizeInfo.class);
		map.put(MessageType.CG_GET_PRIZE, CGGetPrize.class);
		map.put(MessageType.GC_GET_PRIZE, GCGetPrize.class);
		map.put(MessageType.CG_SHIQU_ITEM, CGShiquItem.class);
		map.put(MessageType.GC_SHIQU_ITEM, GCShiquItem.class);
		map.put(MessageType.CG_LEAVE_REP, CGLeaveRep.class);
		map.put(MessageType.GC_LEAVE_REP, GCLeaveRep.class);
		map.put(MessageType.GC_ALIVE_MONSTER, GCAliveMonster.class);
		map.put(MessageType.CG_AGAINST_REP_INFO, CGAgainstRepInfo.class);
		map.put(MessageType.GC_AGAINST_REP_INFO, GCAgainstRepInfo.class);
		map.put(MessageType.CG_AGAINST_REP_START, CGAgainstRepStart.class);
		map.put(MessageType.GC_AGAINST_REP_START, GCAgainstRepStart.class);
		map.put(MessageType.GC_AGAINST_REP_RESULT, GCAgainstRepResult.class);
		map.put(MessageType.GC_AGAINST_REP_ERR, GCAgainstRepErr.class);
		map.put(MessageType.CG_AGAINST_REP_END, CGAgainstRepEnd.class);
		map.put(MessageType.GC_AGAINST_REP_END, GCAgainstRepEnd.class);
		map.put(MessageType.CG_AGAINST_REP_ACC_GOLD, CGAgainstRepAccGold.class);
		map.put(MessageType.GC_AGAINST_REP_ACC_GOLD, GCAgainstRepAccGold.class);
		map.put(MessageType.CG_AGAINST_REP_ACC, CGAgainstRepAcc.class);
		return map;
	}

}
